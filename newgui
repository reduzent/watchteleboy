#!/usr/bin/env python3

import urwid
import sys

channels = "SRF1 SRF2 SRFi ARD ZDF ORF1 ORF2 3sat Arte Pro7ch Sat.1ch VOXch Kabel1ch RTLch RTL2ch S-RTLch RTLNitro DMAX sixx Pro7Maxx ServusTV BR SWR-BW WDR MDR NDR ZDFneo ZDF-Info n-tv PHOENIX SWISS1 NickCH TZÃ¼ri S1 3+ 4+ 5+ MTV KiKa Sport1 BBC1 CNBC CNN BBCwn".split(' ')

representations = {
    0: '1280x720@50',
    1: '1280x720@25',
    2: '768x432@25',
    3: '512x288@25'
}

audio_languages = {
    1: 'de',
    2: 'en'
}

palette = [
    ('title', '', '', '', '#008,bold', '#fdf'),
    ('focus', '', '', '', '#000', '#ddd'),
    ('focus_u', '', '', '', '#000,underline', '#ddd'),
    ('underline', '', '', '', 'default,underline', 'default'),
    ('button', '', '', '', '#000,bold', '#dff')
]

line_box_chars = {
    'tlcorner': '\N{Lower half block}',
    'trcorner': '\N{Lower half block}',
    'brcorner': '\N{Upper half block}',
    'blcorner': '\N{Upper half block}',
    'lline': '\N{Full block}',
    'rline': '\N{Full block}',
    'tline': '\N{Lower half block}',
    'bline': '\N{Upper half block}'
}

def switch_channel(button, state, channel):
    pass

def switch_representation(button, state, channel):
    pass

def switch_language(button, state, channel):
    pass

def set_autoplay(button, state):
    pass

def start_playback(button):
    pass

def stop_playback(button):
    pass

def quit_program(button):
    pass

div = urwid.Divider()

# main title
title_bt = urwid.BigText(('title', "watchteleboy"), urwid.HalfBlock5x4Font())
title_am = urwid.AttrMap(urwid.Padding(title_bt, width='clip', align='center'), 'title')
title = urwid.Pile([div, title_am, div])

# Box "Channel:" (left part)
ch_sel_header = urwid.AttrMap(urwid.Padding(urwid.Text('Channel:'), width=('relative', 100)), 'title')
ch_sel_radios = []
for channel in channels:
    urwid.RadioButton(ch_sel_radios, channel, on_state_change=switch_channel, user_data=channel)
ch_list = urwid.ListBox(urwid.SimpleFocusListWalker(ch_sel_radios))
left_content = urwid.Pile([
    ('pack', ch_sel_header),
    ('pack', div),
    ch_list,
    ('pack', div)
])
left = urwid.LineBox(left_content)

# Settings and stuff (right part)
# Box "Control:"
ctrl_header = urwid.AttrMap(urwid.Padding(urwid.Text('Control:'), width=('relative', 100)), 'title')
autoplay = urwid.AttrMap(urwid.CheckBox('Autoplay', state=True, on_state_change=set_autoplay), '', focus_map='focus')
play = urwid.Padding(urwid.AttrMap(urwid.LineBox(urwid.Button('Play', on_press=start_playback)), 'button', focus_map='focus'), width=10)
stop = urwid.Padding(urwid.Button('Stop', on_press=stop_playback), width=8)
quit = urwid.Padding(urwid.AttrMap(urwid.LineBox(urwid.Button('Quit', on_press=quit_program)), 'button', focus_map='focus'), width=10, align='right')
playstop_quit = urwid.Columns([play, quit])
right1_pile = urwid.Pile([
    ('pack', ctrl_header),
    ('pack', div),
    ('pack', autoplay),
    ('pack', div),
    ('pack', playstop_quit),
    urwid.SolidFill(' ')
])
right1_content = urwid.BoxAdapter(right1_pile, height=7)
right1_box = urwid.LineBox(right1_content)

# Box "Quality:"
repr_header = urwid.AttrMap(urwid.Padding(urwid.Text('Quality:'), width=('relative', 100)), 'title')
repr_radios = []
for r_id in representations.keys():
    urwid.RadioButton(repr_radios, representations[r_id], on_state_change=switch_representation, user_data=r_id)
r_list = urwid.ListBox(urwid.SimpleListWalker(repr_radios))
right2_pile = urwid.Pile([
    ('pack', repr_header),
    ('pack', div),
    r_list
])
right2_content = urwid.BoxAdapter(right2_pile, height=8)
right2_box = urwid.LineBox(right2_content)

# Box "Language:"
lang_header = urwid.AttrMap(urwid.Padding(urwid.Text('Language:'), width=('relative', 100)), 'title')
lang_radios = []
for lang_id in audio_languages.keys():
    urwid.RadioButton(lang_radios, audio_languages[lang_id], on_state_change=switch_language, user_data=lang_id)
lang_list = urwid.ListBox(urwid.SimpleListWalker(lang_radios))
right3_pile = urwid.Pile([
    ('pack', lang_header),
    ('pack', div),
    lang_list
])
right3_content = urwid.BoxAdapter(right3_pile, height=4)
right3_box = urwid.LineBox(right3_content)

# Box "Time:"
time_header = urwid.AttrMap(urwid.Padding(urwid.Text('Time:'), width=('relative', 100)), 'title')
time_string = urwid.Padding(urwid.AttrMap(urwid.Edit(caption='', edit_text='20:15:00'), 'underline', focus_map='focus_u'), width=8)
time_hours = urwid.IntEdit(caption='', default=20)
time_minutes = urwid.IntEdit(caption=':', default=15)
time_seconds = urwid.IntEdit(caption=':', default=0)
time_edit = urwid.GridFlow([time_string, time_hours, time_minutes, time_seconds], 3, 3, 3, 'left')
right4_pile = urwid.Pile([
    ('pack', time_header),
    ('pack', div),
    ('pack', time_string),
    urwid.SolidFill(' ')
])
right4_content = urwid.BoxAdapter(right4_pile, height=3)
right4_box = urwid.LineBox(right4_content)

# Stitching boxes together
right = urwid.Pile([
    ('pack', right1_box),
    ('pack', right2_box),
    ('pack', right3_box),
    ('pack', right4_box),
    urwid.LineBox(urwid.SolidFill(' '))
])

# Overall Layout
columns = urwid.Padding(urwid.Columns([left, right], dividechars=2), left=2, right=2)
content = urwid.Frame(columns, header=title, footer=div)
lbc = urwid.LineBox(content, **line_box_chars)
hlbc = urwid.Padding(lbc, left=1, right=1)
loop = urwid.MainLoop(hlbc, palette=palette)
loop.screen.set_terminal_properties(colors=256)

try:
    loop.run()
except KeyboardInterrupt:
    pass



